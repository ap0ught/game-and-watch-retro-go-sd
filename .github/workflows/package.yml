name: Generate gw_update.tar

on:
  push:
    branches:
      - main

jobs:
  build-package:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository with submodules
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: true  # Clone submodules with --recurse-submodules

      # 2. Install necessary dependencies (binutils, Python, etc.)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils-arm-none-eabi python3 python3-pip libhidapi-hidraw0 libftdi1 libftdi1-2 make git wget

      # 3. Install the ARM compiler
      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '13.3.Rel1'

      # 4. Install Python dependencies from requirements.txt
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements.txt

      # 5. Generate the update archive
      - name: Generate gw_update.tar
        run: |
          make -j$(nproc) GNW_TARGET=zelda COVERFLOW=1 SHARED_HIBERNATE_SAVESTATE=1 DISABLE_SPLASH_SCREEN=1 INTFLASH_BANK=2 build_update_archive

      # 6. Upload the generated file as an artifact
      - name: Upload gw_update.tar as artifact
        uses: actions/upload-artifact@v4
        with:
          name: gw_update.tar
          path: gw_update.tar
